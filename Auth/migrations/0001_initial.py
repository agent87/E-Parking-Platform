# Generated by Django 3.2.5 on 2021-07-29 14:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cameradef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cameraid', models.CharField(db_column='CameraId', max_length=50)),
                ('type', models.CharField(db_column='Type', max_length=50)),
                ('modelnum', models.CharField(db_column='ModelNum', max_length=50)),
                ('ipaddress', models.CharField(blank=True, db_column='IpAddress', max_length=50, null=True)),
                ('macaddress', models.CharField(blank=True, db_column='MacAddress', max_length=50, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=50, null=True)),
                ('origin', models.CharField(blank=True, db_column='Origin', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customerid', models.CharField(db_column='CustomerId', max_length=50, primary_key=True, serialize=False)),
                ('clienttype', models.CharField(blank=True, db_column='ClientType', max_length=70, null=True)),
                ('fname', models.CharField(blank=True, db_column='FName', max_length=50, null=True)),
                ('lname', models.CharField(blank=True, db_column='LName', max_length=50, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=80, null=True)),
                ('mobile', models.CharField(blank=True, db_column='Mobile', max_length=13, null=True)),
                ('position', models.CharField(blank=True, db_column='Position', max_length=20, null=True)),
                ('companyname', models.CharField(blank=True, db_column='CompanyName', max_length=50, null=True)),
                ('companymail', models.CharField(blank=True, db_column='CompanyMail', max_length=70, null=True)),
                ('companyid', models.CharField(blank=True, db_column='CompanyId', max_length=30, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=50, null=True)),
                ('sector', models.CharField(blank=True, db_column='Sector', max_length=50, null=True)),
                ('district', models.CharField(blank=True, db_column='District', max_length=40, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=30, null=True)),
                ('province', models.CharField(blank=True, db_column='Province', max_length=30, null=True)),
                ('geolocation', models.CharField(blank=True, db_column='GeoLocation', max_length=50, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=30, null=True)),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=500, null=True)),
                ('enrollmentdate', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gatesdef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateid', models.CharField(db_column='GateId', max_length=50)),
                ('customerid', models.CharField(db_column='CustomerId', max_length=50)),
                ('flow', models.CharField(db_column='Flow', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=50, null=True)),
                ('cashiername', models.CharField(blank=True, db_column='CashierName', max_length=50, null=True)),
                ('cameraid', models.CharField(blank=True, db_column='CameraId', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parkinglog',
            fields=[
                ('ticketid', models.UUIDField(db_column='TicketId', primary_key=True, serialize=False)),
                ('customerid', models.CharField(db_column='CustomerId', max_length=50)),
                ('date', models.DateField(db_column='Date')),
                ('platenum', models.CharField(db_column='PlateNum', max_length=50)),
                ('entrygateid', models.CharField(db_column='EntryGateId', max_length=50)),
                ('checkintime', models.BigIntegerField(db_column='CheckinTime')),
                ('checkouttime', models.BigIntegerField(blank=True, db_column='CheckoutTime', null=True)),
                ('exitgateid', models.CharField(blank=True, db_column='ExitGateId', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=50, null=True)),
                ('duration', models.FloatField(blank=True, db_column='Duration', null=True)),
                ('cash', models.FloatField(blank=True, db_column='Cash', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tarrif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerid', models.CharField(db_column='CustomerId', max_length=50)),
                ('fromtime', models.FloatField(blank=True, db_column='FromTime', null=True)),
                ('totime', models.FloatField(blank=True, db_column='ToTime', null=True)),
                ('cost', models.FloatField(blank=True, db_column='Cost', null=True)),
                ('initiatedby', models.CharField(blank=True, db_column='Initiatedby', max_length=50, null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('lastupdate', models.DateField(blank=True, db_column='LastUpdate', null=True)),
                ('updatelog', models.CharField(blank=True, db_column='UpdateLog', max_length=50, null=True)),
            ],
        ),
    ]
