# Generated by Django 3.2.9 on 2021-11-15 06:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customer_id', models.CharField(db_column='CustomerId', editable=False, max_length=50, primary_key=True, serialize=False)),
                ('client_type', models.CharField(blank=True, db_column='ClientType', max_length=70, null=True)),
                ('company_name', models.CharField(blank=True, db_column='CompanyName', max_length=50, null=True)),
                ('email', models.CharField(blank=True, db_column='CompanyMail', max_length=70, null=True)),
                ('contact', models.CharField(blank=True, db_column='CompanyId', max_length=30, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=50, null=True)),
                ('geolocation', models.CharField(blank=True, db_column='GeoLocation', max_length=50, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=30, null=True)),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=500, null=True)),
                ('enrollment_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phonenum', models.CharField(blank=True, db_column='PhoneNum', max_length=30, null=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SystemApp.customers')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Tarrif',
            fields=[
                ('tarrif_id', models.UUIDField(db_column='TarrifId', primary_key=True, serialize=False)),
                ('fromtime', models.FloatField(blank=True, db_column='FromTime', null=True)),
                ('totime', models.FloatField(blank=True, db_column='ToTime', null=True)),
                ('cost', models.FloatField(blank=True, db_column='Cost', null=True)),
                ('initiatedby', models.CharField(blank=True, db_column='Initiatedby', max_length=50, null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('lastupdate', models.DateField(blank=True, db_column='LastUpdate', null=True)),
                ('updatelog', models.CharField(blank=True, db_column='UpdateLog', max_length=50, null=True)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SystemApp.customers')),
            ],
            options={
                'db_table': 'Tarrif',
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('subscription_id', models.BigAutoField(db_column='SubscriptionId', primary_key=True, serialize=False)),
                ('platenumber', models.CharField(db_column='PlateNumber', max_length=50)),
                ('start_date', models.DateField(db_column='start')),
                ('end_date', models.DateField(db_column='end')),
                ('type', models.CharField(db_column='SubscriptionType', max_length=50)),
                ('amount', models.FloatField(db_column='SubscriptionAmount')),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('phonenum', models.CharField(db_column='ContactNumber', max_length=50)),
                ('office', models.CharField(db_column='OfficeLocation', max_length=50)),
                ('parklot', models.CharField(db_column='ParkingLot', max_length=50)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SystemApp.customers')),
            ],
            options={
                'db_table': 'Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Parkinglog',
            fields=[
                ('ticket_id', models.UUIDField(db_column='TicketId', primary_key=True, serialize=False)),
                ('date', models.DateField(db_column='Date')),
                ('platenum', models.CharField(db_column='PlateNum', max_length=50)),
                ('entrygateid', models.CharField(db_column='EntryGateId', max_length=50)),
                ('checkintime', models.BigIntegerField(db_column='CheckinTime')),
                ('checkouttime', models.BigIntegerField(blank=True, db_column='CheckoutTime', null=True)),
                ('exitgateid', models.CharField(blank=True, db_column='ExitGateId', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=50, null=True)),
                ('duration', models.FloatField(blank=True, db_column='Duration', null=True)),
                ('cash', models.FloatField(blank=True, db_column='Cash', null=True)),
                ('subcription_id', models.CharField(blank=True, db_column='SubcriptionId', max_length=50, null=True)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SystemApp.customers')),
            ],
            options={
                'db_table': 'ParkingLog',
            },
        ),
        migrations.AddField(
            model_name='customers',
            name='administrator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
